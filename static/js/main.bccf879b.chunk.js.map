{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","session_length","break_length","real_session_length","real_break_length","running","start","running_break","start_break","handleClick","bind","playandpause","reset","timer_session","timer_break","this","setState","console","log","runningTime","runningTime_break","clearInterval","setInterval","prevState","myAudio","document","getElementById","pause","currentTime","myWarning","x","y","load","play","style","color","milisecondConverter","date","Date","m","getHours","getMinutes","s","getSeconds","limiter","mySwitcher","redAlertText","buzzer","className","id","onClick","preload","src","type","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bccf879b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      // these are in seconds  (to get miliseconds --* by 1000) (25 mins is 1500 secs and 5 mins is 300 seconds )\n      session_length: 25,  //1500000\n      break_length: 5, // 300000\n      real_session_length:1500000,\n      real_break_length:300000,\n      running: false,\n      start: 0,\n      running_break: false,\n      start_break: 0,\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.playandpause = this.playandpause.bind(this);\n    this.reset = this.reset.bind(this);\n    this.timer_session = null;\n    this.timer_break = null;\n  }\n\n  componentDidMount(){\n    this.setState({start: this.state.real_session_length, start_break: this.state.real_break_length})\n  }\n\n  playandpause(){\n    // this.setState({running: !this.state.running},this.runningTime); this is currently working to for just when session is on\n if (this.state.running && !this.state.running_break && this.state.start < this.state.real_session_length){\n  console.log(\"pandp2\");\n      this.setState({running: !this.state.running},this.runningTime);\n    } else if (!this.state.running && !this.state.running_break && this.state.start < this.state.real_session_length) {\n      console.log(\"pandp3\");\n      this.setState({running: !this.state.running},this.runningTime);\n  } else if (!this.state.running && this.state.running_break && this.state.start_break < this.state.real_break_length) {\n    console.log(\"pandp4\");\n    this.setState({running_break: !this.state.running_break},this.runningTime_break);\n    } else if (!this.state.running && !this.state.running_break && this.state.start_break < this.state.real_break_length){\n      console.log(\"pandp5\");\n      this.setState({running_break: true},this.runningTime_break);\n    } else if (!this.state.running && !this.state.running_break){\n      console.log(\"pandp1\");\n      this.setState({running: !this.state.running},this.runningTime)\n    } \n  }\n//works in ms\n  // runningTime(){\n  //   if (this.state.running === true){\n  //     clearInterval(this.timer_break);\n  //     this.timer_session = setInterval(() => {this.setState((prevState)=> {return {start: prevState.start - 1000} }\n  //     )},1000);\n  //   } else if (!this.state.running){\n  //     clearInterval(this.timer_session);\n  //   }\n  // }\n\n    runningTime(){\n    if (this.state.running === true){\n      clearInterval(this.timer_break);\n      this.timer_session = setInterval(() => {this.setState((prevState)=> {return {start: prevState.start - 1000} }\n      )},1000);\n    } else if (!this.state.running){\n      clearInterval(this.timer_session);\n    }\n  }\n\n      runningTime_break(){\n      if (this.state.running_break){\n    clearInterval(this.timer_session);\n    this.timer_break = setInterval(() => {this.setState((prevState)=> {return {start_break: prevState.start_break - 1000} }\n    )},1000);}\n    else if (!this.state.running_break){\n      clearInterval(this.timer_break)\n    }\n  }\n\n\n//works in ms\n  //   runningTime_break(){\n  //     if (this.state.running_break){\n  //   clearInterval(this.timer_session);\n  //   this.timer_break = setInterval(() => {this.setState((prevState)=> {return {start_break: prevState.start_break - 1000} }\n  //   )},1000);}\n  //   else if (!this.state.running_break){\n  //     clearInterval(this.timer_break)\n  //   }\n  // }\n\n  reset(){\n    clearInterval(this.timer_session)\n    clearInterval(this.timer_break);\n    let myAudio = document.getElementById(\"beep\");\n    myAudio.pause();\n    myAudio.currentTime = 0;\n    let myWarning = document.getElementById(\"warning\");\n    myWarning.pause();\n    myWarning.currentTime = 0;\n\n    this.setState({start: 1500000, start_break: 300000,  real_session_length: 1500000, real_break_length: 300000,session_length:25,break_length: 5,running: false, running_break:false })\n  }\n\n\n\n  handleClick(x, y){\n    console.log(this.state.session_length);\n    if (!this.state.running && !this.state.running_break ){\n      \n    switch(x){\n      case \"break-decrement\":\n      this.setState((prevState) => {\n      return {real_break_length: prevState.real_break_length - y, start_break: prevState.real_break_length - y, break_length: prevState.break_length - 1 }\n      })\n      break;\n\n      case \"break-increment\":\n      this.setState((prevState) => {\n      return {real_break_length: prevState.real_break_length + y, start_break:prevState.real_break_length + y, break_length: prevState.break_length +1  }\n      })\n      break;\n\n      case \"session-decrement\":\n      this.setState((prevState) => {\n        return {real_session_length:prevState.real_session_length -y, start:prevState.real_session_length -y, session_length: prevState.session_length - 1 }\n      })\n      break;\n\n      case \"session-increment\":\n        this.setState((prevState) => {\n          return {real_session_length: prevState.real_session_length + y, start:prevState.real_session_length + y, session_length: prevState.session_length + 1 }\n        })\n        break\n      }\n    }\n  };\n\n  buzzer(){\n    if (this.state.start === 0 && this.state.running || this.state.start_break === 0 && this.state.running_break){\n      let myAudio = document.getElementById(\"beep\");\n            myAudio.load();\n    myAudio.play();\n    myAudio.currentTime = 0;\n    } else if (this.state.start === 30000 && this.state.running || this.state.start_break === 0 && this.state.running_break) {\n      let myWarning = document.getElementById(\"warning\");\n      myWarning.load();\n      myWarning.play();\n    }\n  }\n// This is the function that will decide when to start running break and when to switch back. \n  mySwitcher(){\n    if (this.state.start < 0 && this.state.running === true ){\n      console.log(\"First if in myswitcher just ran\");\n      clearInterval(this.timer_session);\n      return this.setState({start: this.state.real_session_length, running: false, running_break:true}, this.runningTime_break)\n    } else if (this.state.start_break < 0 && this.state.running_break == true){\n      console.log(\"else if just ran in mySwitcher\");\n      return this.setState({running : true, running_break: false,start_break:this.state.real_break_length },this.runningTime)\n    }\n  }\n// working with ms\n  // limiter(){\n  //   if (!this.state.running && !this.state.running_break && this.state.session_length === 0 ){\n  //     console.log(\"limiter min ran\");\n  //     this.setState({session_length: 60000, start: 60000})\n  //   } else if (!this.state.running && !this.state.running_break && this.state.session_length > 3600000) {\n  //     console.log(\"limiter max ran\");\n  //     this.setState({session_length: 3600000, start: 3600000})\n  //   } else if (!this.state.running && !this.state.running_break && this.state.break_length === 0 ){\n  //     this.setState({break_length: 60000, start_break: 60000})\n  //   } else if (!this.state.running && !this.state.running_break && this.state.break_length > 3600000){\n  //     this.setState({break_length: 3600000, start_break: 3600000})\n  //   }\n  // }\n\n    limiter(){\n    if (!this.state.running && !this.state.running_break && this.state.real_session_length === 0 && this.state.session_length === 0 ){\n      console.log(\"limiter min ran\");\n      this.setState({real_session_length: 60000, start: 60000, session_length: 1})\n    } else if (!this.state.running && !this.state.running_break && this.state.real_session_length > 3600000 && this.state.session_length > 60) {\n      console.log(\"limiter max ran\");\n      this.setState({real_session_length: 3600000, start: 3600000, session_length: 60})\n    } else if (!this.state.running && !this.state.running_break && this.state.real_break_length === 0 && this.state.break_length === 0){\n      this.setState({real_break_length: 60000, start_break: 60000, break_length:1 })\n    } else if (!this.state.running && !this.state.running_break && this.state.real_break_length > 3600000 && this.state.break_length > 60){\n      this.setState({real_break_length: 3600000, start_break: 3600000, break_length:60})\n    }\n  }\n\n  redAlertText(){\n    if (this.state.start && this.state.start < 30000){\n      document.getElementById(\"time-left\").style.color=\"red\"\n    } else if (this.state.start && this.state.start > 30000) {\n      document.getElementById(\"time-left\").style.color=\"black\"\n    }\n  }\n\n\n\n  render(){\n    this.limiter();\nthis.mySwitcher();\nthis.redAlertText();\n    \n// this works in ms\n    function milisecondConverter(x){\n      let date = new Date(x);\n      let h =date.getHours();\n      let m = date.getMinutes();\n      let s = date.getSeconds();\n      // console.log(date);\n      // console.log(h,m,s);\n      if (x == 3600000){\n        return \"60\"+\":\"+\"00\"\n      } else if (m < 10 && s === 0){\n        return \"0\"+(m) + \":\" + \"0\"+s;\n      }else if (m <10 && s >= 1 && s <= 9){\n        return \"0\"+(m) + \":\"+\"0\" + s;\n      }\n      else if (m < 10){\n        return \"0\"+(m) + \":\" + s;\n      }  else if (m >= 10 && s <10){\n        return (m) + \":\" + \"0\"+s;\n      }\n      else if  (s === 0) {\n        return (m) + \":\" + s+\"0\";\n      } else if (m == 0 && s == 0 ) {\n        return \"00:00\"\n      }\n      else {\n        return (m) + \":\" + s;\n      }\n    }\n\n\n\n    function milisecondConverterNoSec(x){\n      let date = new Date(x);\n      let h =date.getHours();\n      let m = date.getMinutes();\n      let s = date.getSeconds();\n      if (x === 3600000 ){\n        return 60\n      } else {return m}\n\n\n        \n\n\n\n    }\n   \n\n    this.buzzer();\n\n  return (\n<div className=\"App container-fluid\">\n  <div className = \"row\">\n  <h1 className=\"display-1 col-xl justify-content-md-center\">Jiu Jitsu Round Timer</h1>\n  </div>\n    \n    \n      <div id = \"break-label\" className=\"row justify-content-center\" >\n      <button id = \"break-decrement\" className=\"down btn btn-primary col-2\" onClick={() => this.handleClick(\"break-decrement\", 60000)}>Down</button>\n      <span className=\"col-3 display-5\">Break Length</span>\n      <button id = \"break-increment\" className=\"up btn btn-primary col-2 \" onClick={() => this.handleClick(\"break-increment\", 60000)}>Up</button>\n      </div>\n        <div className=\"row\">\n        <p id = \"break-length\" className=\"col align-self-center display-4\">{this.state.break_length}</p>\n        </div>\n    \n  \n  <div id = \"session-label\" className=\"row justify-content-center\">\n  <button id = \"session-decrement\" className=\"down btn btn-primary col-2\" onClick={() => this.handleClick(\"session-decrement\", 60000)}>Down</button>\n <span className=\"col-3 display-5\">Session Length</span>\n  <button id = \"session-increment\" className=\"up btn btn-primary col-2\" onClick={()=> this.handleClick(\"session-increment\", 60000)}>Up</button>\n  </div>\n  \n  <div className=\"row\">\n  <p id = \"session-length\" className=\"col align-self-center display-4\">{this.state.session_length}</p>\n  </div>\n      \n      \n\n      <div id = \"timer-label\">\n      {this.state.running && !this.state.running_break || \n      !this.state.running && !this.state.running_break && this.state.start <= this.state.real_session_length && this.state.start_break == this.state.real_break_length \n      ? <p className=\"display-4\">Session</p> :<p className=\"display-4\">Break</p> }\n      <div id = \"time-left\" className=\"display-4\">\n      {this.state.running && !this.state.running_break || \n      !this.state.running && !this.state.running_break && this.state.start <= this.state.real_session_length && this.state.start_break == this.state.real_break_length \n      ? <p className=\"animate__animated animate__flipInX \">{milisecondConverter(this.state.start)}</p> : <p>{milisecondConverter(this.state.start_break)}</p>}</div>\n      </div>\n      <div className=\"row justify-content-center\">\n      <button id=\"start_stop\" className= \"btn-primary\"onClick={this.playandpause}>Play/Pause</button>\n      <button id = \"reset\" className=\"btn btn-danger\" onClick={this.reset}>Reset</button>\n\n      </div>\n      \n      \n    \n          \n\n      \n      \n          <audio className = \"buzzer\" id=\"beep\" preload=\"preload\">\n          <source src=\"https://dl3.pushbulletusercontent.com/UVA244Bze0Yk5P0lBfYdcDjE4kBpXXDS/Boxing_arena_sound-Samantha_Enrico-246597508.mp3\" type=\"audio/mp3\" />\n          </audio>\n\n          <audio className = \"warningBuzzer\" id=\"warning\" preload=\"preload\">\n          <source src=\"https://dl3.pushbulletusercontent.com/CWDbV8a0TWbdqVeKGIeksXDkFznVYXBh/Red%20Alert-SoundBible.com-108009997.mp3\" type=\"audio/mp3\" />\n          </audio>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}